# ### 1. CREATE THE GRAPH #####
blocks:
- name: create-graph
  tags:
   phase: create-graph
  statements:
    - system.graph('<<graphname:workshop>>').ifNotExists().create()

# ### 2. DEV MODE FOR SCHEMA-FREE INSERTION OF AIR ROUTES #####
# ### Creates a schema-less environment and prepares ds graph for auto schema detection
# ### this is okay because we just want to learn some Gremlin.
# ### this is never advisable for production applications
- name: graph-schema
  tags:
   phase: graph-schema
  statements:
   - >-
    schema.propertyKey("icao").Text().single().ifNotExists().create()
    schema.propertyKey("dist").Int().single().ifNotExists().create()
    schema.propertyKey("city").Text().single().ifNotExists().create()
    schema.propertyKey("runways").Int().single().ifNotExists().create()
    schema.propertyKey("lat").Double().single().ifNotExists().create()
    schema.propertyKey("code").Text().single().ifNotExists().create()
    schema.propertyKey("region").Text().single().ifNotExists().create()
    schema.propertyKey("desc").Text().single().ifNotExists().create()
    schema.propertyKey("type").Text().single().ifNotExists().create()
    schema.propertyKey("elev").Int().single().ifNotExists().create()
    schema.propertyKey("longest").Int().single().ifNotExists().create()
    schema.propertyKey("country").Text().single().ifNotExists().create()
    schema.propertyKey("lon").Double().single().ifNotExists().create()
    schema.edgeLabel("route").multiple().properties("dist").ifNotExists().create()
    schema.edgeLabel("contains").multiple().ifNotExists().create()
    schema.vertexLabel("airport").partitionKey("code").properties("country","longest", "city", "elev", "icao", "lon", "type", "region", "runways", "lat", "desc").ifNotExists().create()
    schema.vertexLabel("version").partitionKey("code").properties("type", "desc").ifNotExists().create()
    schema.vertexLabel("country").partitionKey("code").properties("type", "desc").ifNotExists().create()
    schema.vertexLabel("continent").partitionKey("code").properties("type", "desc").ifNotExists().create()
    schema.edgeLabel("route").connection("airport", "airport").add()
    schema.edgeLabel("contains").connection("country", "airport").connection("continent", "airport").add()

# ### 3. CONIGURE SCHEMA TO TAKE OF ALL RAILS TO WORK WITH AIR ROUTES #####
- name: config-schema
  tags:
   phase: config-schema
  statements:
   - >-
    schema.config().option('graph.schema_mode').set('Development')
    schema.config().option('graph.allow_scan').set('true')
    schema.config().option("tx_autostart").set(true)
    schema.config().option("graph.traversal_sources.g.evaluation_timeout").set('PT2H')

# ### 4. read the data from graph.io #####
- name: read-graph
  tags:
   phase: read-graph
  statements:
   - >-
    graph.io(IoCore.graphml()).readGraph("/tmp/gremlin-workshop/data/air-routes.graphml")